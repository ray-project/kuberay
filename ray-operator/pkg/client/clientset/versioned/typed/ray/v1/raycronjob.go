// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	rayv1 "github.com/ray-project/kuberay/ray-operator/apis/ray/v1"
	applyconfigurationrayv1 "github.com/ray-project/kuberay/ray-operator/pkg/client/applyconfiguration/ray/v1"
	scheme "github.com/ray-project/kuberay/ray-operator/pkg/client/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// RayCronJobsGetter has a method to return a RayCronJobInterface.
// A group's client should implement this interface.
type RayCronJobsGetter interface {
	RayCronJobs(namespace string) RayCronJobInterface
}

// RayCronJobInterface has methods to work with RayCronJob resources.
type RayCronJobInterface interface {
	Create(ctx context.Context, rayCronJob *rayv1.RayCronJob, opts metav1.CreateOptions) (*rayv1.RayCronJob, error)
	Update(ctx context.Context, rayCronJob *rayv1.RayCronJob, opts metav1.UpdateOptions) (*rayv1.RayCronJob, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, rayCronJob *rayv1.RayCronJob, opts metav1.UpdateOptions) (*rayv1.RayCronJob, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*rayv1.RayCronJob, error)
	List(ctx context.Context, opts metav1.ListOptions) (*rayv1.RayCronJobList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *rayv1.RayCronJob, err error)
	Apply(ctx context.Context, rayCronJob *applyconfigurationrayv1.RayCronJobApplyConfiguration, opts metav1.ApplyOptions) (result *rayv1.RayCronJob, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, rayCronJob *applyconfigurationrayv1.RayCronJobApplyConfiguration, opts metav1.ApplyOptions) (result *rayv1.RayCronJob, err error)
	RayCronJobExpansion
}

// rayCronJobs implements RayCronJobInterface
type rayCronJobs struct {
	*gentype.ClientWithListAndApply[*rayv1.RayCronJob, *rayv1.RayCronJobList, *applyconfigurationrayv1.RayCronJobApplyConfiguration]
}

// newRayCronJobs returns a RayCronJobs
func newRayCronJobs(c *RayV1Client, namespace string) *rayCronJobs {
	return &rayCronJobs{
		gentype.NewClientWithListAndApply[*rayv1.RayCronJob, *rayv1.RayCronJobList, *applyconfigurationrayv1.RayCronJobApplyConfiguration](
			"raycronjobs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *rayv1.RayCronJob { return &rayv1.RayCronJob{} },
			func() *rayv1.RayCronJobList { return &rayv1.RayCronJobList{} },
		),
	}
}
