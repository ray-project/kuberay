// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	rayv1 "github.com/ray-project/kuberay/ray-operator/apis/ray/v1"
)

// DeletionRuleApplyConfiguration represents a declarative configuration of the DeletionRule type for use
// with apply.
type DeletionRuleApplyConfiguration struct {
	Policy    *rayv1.DeletionPolicyType            `json:"policy,omitempty"`
	Condition *DeletionConditionApplyConfiguration `json:"condition,omitempty"`
}

// DeletionRuleApplyConfiguration constructs a declarative configuration of the DeletionRule type for use with
// apply.
func DeletionRule() *DeletionRuleApplyConfiguration {
	return &DeletionRuleApplyConfiguration{}
}

// WithPolicy sets the Policy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Policy field is set to the value of the last call.
func (b *DeletionRuleApplyConfiguration) WithPolicy(value rayv1.DeletionPolicyType) *DeletionRuleApplyConfiguration {
	b.Policy = &value
	return b
}

// WithCondition sets the Condition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Condition field is set to the value of the last call.
func (b *DeletionRuleApplyConfiguration) WithCondition(value *DeletionConditionApplyConfiguration) *DeletionRuleApplyConfiguration {
	b.Condition = value
	return b
}
