// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// IncrementalUpgradeOptionsApplyConfiguration represents a declarative configuration of the IncrementalUpgradeOptions type for use
// with apply.
type IncrementalUpgradeOptionsApplyConfiguration struct {
	MaxSurgePercent  *int32  `json:"maxSurgePercent,omitempty"`
	StepSizePercent  *int32  `json:"stepSizePercent,omitempty"`
	IntervalSeconds  *int32  `json:"intervalSeconds,omitempty"`
	GatewayClassName *string `json:"gatewayClassName,omitempty"`
}

// IncrementalUpgradeOptionsApplyConfiguration constructs a declarative configuration of the IncrementalUpgradeOptions type for use with
// apply.
func IncrementalUpgradeOptions() *IncrementalUpgradeOptionsApplyConfiguration {
	return &IncrementalUpgradeOptionsApplyConfiguration{}
}

// WithMaxSurgePercent sets the MaxSurgePercent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxSurgePercent field is set to the value of the last call.
func (b *IncrementalUpgradeOptionsApplyConfiguration) WithMaxSurgePercent(value int32) *IncrementalUpgradeOptionsApplyConfiguration {
	b.MaxSurgePercent = &value
	return b
}

// WithStepSizePercent sets the StepSizePercent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StepSizePercent field is set to the value of the last call.
func (b *IncrementalUpgradeOptionsApplyConfiguration) WithStepSizePercent(value int32) *IncrementalUpgradeOptionsApplyConfiguration {
	b.StepSizePercent = &value
	return b
}

// WithIntervalSeconds sets the IntervalSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IntervalSeconds field is set to the value of the last call.
func (b *IncrementalUpgradeOptionsApplyConfiguration) WithIntervalSeconds(value int32) *IncrementalUpgradeOptionsApplyConfiguration {
	b.IntervalSeconds = &value
	return b
}

// WithGatewayClassName sets the GatewayClassName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GatewayClassName field is set to the value of the last call.
func (b *IncrementalUpgradeOptionsApplyConfiguration) WithGatewayClassName(value string) *IncrementalUpgradeOptionsApplyConfiguration {
	b.GatewayClassName = &value
	return b
}
