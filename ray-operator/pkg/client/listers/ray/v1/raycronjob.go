// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	rayv1 "github.com/ray-project/kuberay/ray-operator/apis/ray/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// RayCronJobLister helps list RayCronJobs.
// All objects returned here must be treated as read-only.
type RayCronJobLister interface {
	// List lists all RayCronJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*rayv1.RayCronJob, err error)
	// RayCronJobs returns an object that can list and get RayCronJobs.
	RayCronJobs(namespace string) RayCronJobNamespaceLister
	RayCronJobListerExpansion
}

// rayCronJobLister implements the RayCronJobLister interface.
type rayCronJobLister struct {
	listers.ResourceIndexer[*rayv1.RayCronJob]
}

// NewRayCronJobLister returns a new RayCronJobLister.
func NewRayCronJobLister(indexer cache.Indexer) RayCronJobLister {
	return &rayCronJobLister{listers.New[*rayv1.RayCronJob](indexer, rayv1.Resource("raycronjob"))}
}

// RayCronJobs returns an object that can list and get RayCronJobs.
func (s *rayCronJobLister) RayCronJobs(namespace string) RayCronJobNamespaceLister {
	return rayCronJobNamespaceLister{listers.NewNamespaced[*rayv1.RayCronJob](s.ResourceIndexer, namespace)}
}

// RayCronJobNamespaceLister helps list and get RayCronJobs.
// All objects returned here must be treated as read-only.
type RayCronJobNamespaceLister interface {
	// List lists all RayCronJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*rayv1.RayCronJob, err error)
	// Get retrieves the RayCronJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*rayv1.RayCronJob, error)
	RayCronJobNamespaceListerExpansion
}

// rayCronJobNamespaceLister implements the RayCronJobNamespaceLister
// interface.
type rayCronJobNamespaceLister struct {
	listers.ResourceIndexer[*rayv1.RayCronJob]
}
