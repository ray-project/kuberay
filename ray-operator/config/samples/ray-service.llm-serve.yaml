apiVersion: ray.io/v1
kind: RayService
metadata:
  name: ray-serve-llm
  namespace: ray-serve
spec:
  serveConfigV2: |
    applications:
    - name: llms
      import_path: ray.serve.llm:build_openai_app
      route_prefix: "/"
      args:
        llm_configs:
        - model_loading_config:
            model_id: qwen2.5-7b-instruct
            model_source: Qwen/Qwen2.5-7B-Instruct
          engine_kwargs:
            dtype: bfloat16
            max_model_len: 1024
            enable_lora: true
          deployment_config:
            autoscaling_config:
              min_replicas: 1
              max_replicas: 4
              # Target number of in-flight requests per replica before triggering scale-up
              target_ongoing_requests: 64
            # Maximum number of ongoing requests per replica (LoRA Adapters will only be loaded on new replica when condition on max_ongoing_requests limit is reached)
            max_ongoing_requests: 96 
          lora_config:
            # S3 Path for LoRA Adapters, Eg: s3://my-s3-bucket/task-adapter
            dynamic_lora_loading_path: s3://my-s3-bucket
            max_num_adapters_per_replica: 3
  rayClusterConfig:
    rayVersion: "2.44.1"
    headGroupSpec:
      rayStartParams: 
        num-cpus: "0"
        dashboard-host: "0.0.0.0"
      template:
        spec:
          containers:
          - name: ray-head
            image: rayproject/ray-llm:2.44.1-py311-cu124
            ports:
            - containerPort: 8000
              name: serve
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 6379
              name: gcs
              protocol: TCP
            - containerPort: 8265
              name: dashboard
              protocol: TCP
            - containerPort: 10001
              name: client
              protocol: TCP
            resources:
              limits:
                cpu: 2
                memory: 4Gi
              requests:
                cpu: 2
                memory: 4Gi
            env:
            # Hugging Face Token
            - name: HUGGING_FACE_HUB_TOKEN
              value: "<HF-TOKEN>"
            # AWS credentials and region for accessing LoRA adapters in S3
            - name: AWS_ACCESS_KEY_ID
              value: "<aws-access-key-id>"
            - name: AWS_SECRET_ACCESS_KEY
              value: "<aws-secret-access-key>"
            - name: AWS_DEFAULT_REGION
              value: "<aws-default-region>"
    workerGroupSpecs:
    - replicas: 1
      minReplicas: 1
      maxReplicas: 1
      numOfHosts: 1
      groupName: gpu-group
      rayStartParams: 
        num-gpus: "4"
      template:
        spec:
          containers: 
          - name: ray-worker
            image: rayproject/ray-llm:2.44.1-py311-cu124
            env:
            - name: HUGGING_FACE_HUB_TOKEN
              value: "<HF-TOKEN>"
            - name: AWS_ACCESS_KEY_ID
              value: "<aws-access-key-id>"
            - name: AWS_SECRET_ACCESS_KEY
              value: "<aws-secret-access-key>"
            - name: AWS_DEFAULT_REGION
              value: "<aws-default-region>"
            resources:
              limits:
                cpu: 32
                memory: 32Gi
                nvidia.com/gpu: "4"
              requests:
                cpu: 32
                memory: 32Gi
                nvidia.com/gpu: "4"