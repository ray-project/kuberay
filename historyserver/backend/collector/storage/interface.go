package storage

import (
	"io"

	"github.com/ray-project/kuberay/historyserver/utils"
)

// StorageWriter is the interface for storage writer.
type StorageWritter interface {
	CreateDirectory(path string) error
	Append(file string, reader io.Reader, appendPosition int64) (nextPod int64, err error)
	WriteFile(file string, reader io.Reader) error
}

// HistoryServer create readers for each storage runtime
// Depends on the implementation of front end.
type StorageReader interface {
	// need to return all available files from backend
	List() []utils.ClusterInfo
	// for log, pass filename to this func
	// for metadata, fileName is generated by historyserver, which will obey the same rule as collector to make sure the historyserver can ready the right file.
	//
	GetContent(clusterId string, fileName string) io.Reader
}
